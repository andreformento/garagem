<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/jee 
    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    
    http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	">

	<mvc:resources mapping="/images/**" location="/resources/images/" />

	<context:component-scan base-package="br.com.formento.garagem.*" />

	<!-- Controller -->
	<!-- habilitar o uso de anotações do Spring MVC e configurar pacote base 
		da aplicação web para o Spring achar as classes -->
	<!-- Enables transactional behavior -->
	<mvc:annotation-driven />

	<!-- Para acessar arquivos externos, como os da pasta resource -->
	<mvc:default-servlet-handler />

	<!-- informar ao Spring o local onde ficam os arquivos JSP. O Spring MVC 
		oferece uma classe especial que recebe o nome da pasta dos JSPs e a extensão 
		dos arquivos. Criar todos os JSPs na pasta -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- gerenciamento de jpa pelo spring -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="mysqlDataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>

	<!-- gerenciamento da transação pelo spring -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- devemos declarar um DataSource no XML do Spring -->
	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/garagem" />
		<property name="username" value="garagem" />
		<property name="password" value="garagem" />
	</bean>
	<!--<bean id="mysqlDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName" value="java:/comp/env/jdbc/garagem"/>
	</bean>
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/MyDataSource"/>-->




	<!-- Adicionar o CommonsMultipartResolver no mvc-config.xml. Graças a ele 
		será possível fazer o cast (MultipartHttpServletRequest) request -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="3000000" />
	</bean>

	<!-- avisar que o controle de transações será feito via anotação, parecido 
		com a forma de habilitar o uso de anotações para o Spring MVC. -->
	<tx:annotation-driven />

	<mvc:interceptors>
		<bean class="br.com.formento.garagem.filter.AutorizadorInterceptor" />
	</mvc:interceptors>

	<!-- Email -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="garagemportal@gmail.com" />
		<property name="password" value="garagem123" />
		<property name="javaMailProperties">
			<props>
				<!-- Use SMTP transport protocol -->
				<prop key="mail.transport.protocol">smtp</prop>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<prop key="mail.smtp.auth">true</prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>

	<bean id="alertMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="garagemportal@gmail.com" />
		<property name="to" value="garagem123" />
		<property name="subject" value="Portal" />
	</bean>

</beans>